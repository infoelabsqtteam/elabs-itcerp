<?php
return [
   'message' => [

        //global Message
        'permissionDenied'      =>  'Error! Permission Denied!',
        'sessionExpired'        =>  'Your session has expired.Please login!',
        'fileColumnMismatch'    =>  'Error! File Column mismatch!',
        'confromDeleteMsg'      =>  'Do you really want to perform this action?',
        'confirmBoxMsg'         =>  'Do you really want to perform this action?',
        'success'               =>  'Success! Entry has been saved successfully.',
        'required'              =>  'Error! All fields are required!',
        'error'                 =>  'Error! Internal Error occur.Please try later.',
        'saved'                 =>  'Success! Entry has been saved successfully.',
        'updated'               =>  'Success! Entry has been updated successfully.',
        'deleted'               =>  'Success! Entry has been deleted successfully.',
        'savedError'            =>  'Error! Entry has not been saved.',
        'updatedError'          =>  'Error! Entry has not been updated.',
        'uploadSuccess'         =>  'Success! File has been uploaded successfully.',
        'uploadError'           =>  'Error! Error in uploading the file.',
        'existError'            =>  'Error! Entry already exist.',
        'notupdated'            =>  'Error! Entry has not been updated,Details are same as previous details',
        'deletedError'          =>  'Error! Error in deleting the entry.',
        'savedNoChange'         =>  'Success! No change has been made.',
        'holdSuccess'           =>  'Success! Customer has been hold successfully.',
        'holdError'             =>  'Error! Error in holding the customer.',
        'unHoldSuccess'         =>  'Success! Customer has been unhold successfully.',
        'customerHoldMsg'       =>  'Alert! Error in unholding the customer as Customer is in hold status',
        'unHoldError'           =>  'Error! Error in unholding the customer.',
        'foreignKeyDeleteError' =>  'Error! You cannot delete any parent if it has a child record.',
        'updateJobStatusError'  =>  'Error! Please enter the correct job status(Completed : Test Result filled.Pending : Test Result not filled.).',
        'fileGenerationMsg'     =>  'Success! PDF File has been generated successfully.',
        'fileDownloadErrorMsg'  =>  'Error! Error in generating the document.Please try again later.',
        'mailSendSuccessMsg'    =>  'Success! Mail has been send Successfully.',
        'mailSendErrorMsg'      =>  'Error! Error in sending Mail.',
        'tokenMismatchErrorMsg' =>  'Error! Token Mismatch.Please re-generate the report again to export the data!',
        'errorInProcessing'     =>  'Error! Error occur in processing the request.Please try later.',
        'deletedParameterError' =>  'Error! You cannot delete all the parameter of an order.',
        'reportApprovingError'  =>  'Alert! Report cannot be approved because Customer is in hold Status.',
        'checkBoxRequiredError' =>  'Error! Please check atleast one checkbox',
        'uniqueKeyError'        =>  'Error! You cannot add duplicate record.',

        //common messages
        'noRecordFound'         =>  'No record found!',
        'provideAppData'        =>  'Please provide appropriate data to save!',
        'dataNotFound'          =>  'Does not found any appropriate data!',
        'dataNotFoundToSaved'   =>  'Does not found any appropriate data to save!',
        'save'                  =>  'Record saved successfully.',
        'fileNotSelected'       =>  'Error! No file selected!',
        'invalidFileType'       =>  'Error! Invalid file type!',
        'invalidFileCoulmn'     =>  'Error! File contain invalid column name!',
        'exist'                 =>  'Error! Record already exist!',
        'allFieldsRequired'     =>  'All fields are required!',
        'pwdNotUpdated'         =>  'Error! Password was not updated!',
        'pwdUpdated'            =>  'Password updated successfully',
        'invalidOldPwd'         =>  'Error! Old password is incorrect!',
        'pwdNotMatch'           =>  'Password and confirm password does not match!',
        'passwordChangeError'   =>  'Error! Error occurs in changing the Password.',
        'passwordChangeSuccess' =>  'Success! Password has been changes successfully.',

        //user modules start here
        'employeeSaved'                 =>  'Employee details saved successfully.',
        'employeeSavedWithDetail'       =>  'Employee details not saved!',
        'employeeAlreadyExist'          =>  'Employee with same email id already exist',
        'employeeNotFound'              =>  'Employee details not found!',
        'inappropriateEmoloyeeData'     =>  'Please provide appropriate data to get employee',
        'employeeDeleted'               =>  'Employee details has been deleted successfully.',
        'employeeNotDeleted'            =>  'Employee details not deleted!Please try again later.',
        'employeeDepartmentRequired'    =>  'Department is required!',
        'employeeDivisionRequired'      =>  'Division is required!',
        'employeeNameRequired'          =>  'Error! Name is required!',
        'employeeEmailRequired'         =>  'Error! Email is required!',
        'passwordRequired'              =>  'Error! Password is required!',
        'departmentRequired'            =>  'Error! Department is required!',
        'roleRequired'                  =>  'Error! Role is required!',
        'equipmentTypeRequired'         =>  'Error! Equipment is required!',
        'employeeUpdated'               =>  'Employee details has been updated successfully.',
        'employeeNotUpdated'            =>  'Employee details not updated!! Details are same as previous details',
        'employeeDetails'               =>  'Employee details not found in the CSV file you are trying to upload!',
        'microbiologistExistError'      =>  'Error! More than one microbiologist cannot be added in the same branch!',
        'removingSalesPerson'           =>  'The employee involved in order booking. You cannot change the role of the employee !',
        'addSalesPerson'                =>  'The employee involved in the order process stage. You cannot change the role of the employee !',

        //customer master section start
        'customerCodeRequired'          =>  'Customer code is required!',
        'customerLogicCodeRequired'     =>  'Logic Customer code is required!',
        'customerLogicCodeExist'        =>  'Invalid Logic Customer code!',
        'customerNameRequired'          =>  'Customer name is required!',
        'customerStateRequired'         =>  'Customer State is required!',
        'customerCityRequired'          =>  'Customer city is required!',
        'customerMobileRequired'        =>  'Customer mobile or phone is required!',
        'customerEmail1Required'        =>  'Customer email is required!',
        'customerLicNumRequired'        =>  'Customer mfg licence number is required!',
        'customerAddressRequired'       =>  'Customer address is required!',
        'customerCountryRequired'       => 'Customer country is required',
        'customerPincodeRequired'       => 'Customer pincode is required',
        'customerSaved'                 => 'Customer details saved successfully.',
        'customerUpdated'               => 'Customer details has been updated successfully.',
        'customerDeleted'               => 'Customer details has been deleted successfully',
        'customerNotSaved'              => 'Customer details not saved!',
        'customerNotUpdated'            => 'Customer details not updated!! Details are same as previous details',
        'customerNotDeleted'            => 'Customer details not deleted!Please try again later.',
        'customerCodeExist'             => 'Customer code  already exist!',
        'customerEmailExist'            => 'Customer email already exist!',
        'billingTypeRequired'           => 'Billing type is required!',
        'invoicingTypeRequired'         => 'Invoicing type is required!',
        'amountValueRequired'           => 'Amount is required!',
        'customerTypeRequired'          => 'Customer type type is required!',
        'divisionRequired'              => 'Sales Territory is required!',
        'saleExecutiveRequired'         => 'Sale executive is required!',
        'discountTypeRequired'          => 'Discount type is required!',
        'discountValueRequired'         => 'Discount value is required!',
        'contactDesignateRequired'      => 'Customer VAT-CST is required!',
        'contactNameRequired'           => 'Contact person name is required!',
        'contactMobile1Required'        => 'Contact person mobile is required!',
        'contactEmailRequired'          => 'Contact person email is required!',
        'customerTanNoRequired'         => 'Customer TAN Number is required!',
        'customerGstNoRequired'         => 'Customer GST Number is required!',
        'bankNameRequired'              => 'Bank Name is required!',
        'contactPersonNotSaved'         => 'Customer contact person details not saved!',
        'customerDetails'               => 'Customer details not found in the CSV file you are trying to upload!',
        'duplicateCustomer'             => 'Duplicate customer code, email or phone number!',
        'discountRequired'              => 'Discount value required',
        'validCustomerMobile'           => 'Please enter a valid/unique Customer mobile!',
        'validCustomerPhone'            => 'Please enter a valid Customer Phone!',
        'customerEmailType'             => 'Customer Email type is required.',
        'customerEmailStatus'           =>'Customer Email status is required.',
        'customerEmailSaved'            =>'Customer Email saved successfully.',
        'status'                        =>'Status is required.',
        'customerAlreadyExist'          => 'Customer with same details already exist!',
        'customerDefinedInvoicingError' => 'No customer invoicing type defined!',
        'CustomerPrimaryMailError'      => 'Error! You cannot set more than One Primary Email.',
        'customerGstCategoryRequiredError'    => 'Error! Customer GST Category is required!',
        'customerGstTypeRequiredError'        => 'Error! Customer GST Type is required!',
        'customerGstTaxSlabTypeRequiredError' => 'Error! Customer GST Tax Slab Type is required!',
        
        //division module messages
        'divisionRequired'              => 'Branch is required!',
        'divisionCodeRequired'          => 'Branch code is required!',
        'divisionNameRequired'          => 'Branch name is required!',
        'divisionAddressRequired'       => 'Branch address is required!',
        'divisionCountryRequired'       => 'Branch Country is required!',
        'divisionStateRequired'         => 'Branch State is required!',
        'divisionCityRequired'          => 'Branch city is required!',
        'divisionPANRequired'           => 'Branch PAN is required!',
        'divisionVATRequired'           => 'Branch VAT no is required!',
        'divisionParameterCodeRequired' => 'Branch parameter code is required!',
        'divisionSaved'                 => 'Branch details saved successfully.',
        'divisionUpdated'               => 'Branch details has been updated successfully',
        'divisionDeleted'               => 'Branch details has been deleted successfully',
        'divisionExist'                 => 'Branch code is already exist!',
        'divisionParametersExist'       => 'Parameters for this branch code are already exist!',
        'divisionNotSaved'              =>  'Branch details not saved!',
        'divisionNotUpdated'            =>  'Branch details not updated! Details are same as previous details.',
        'divisionNotDeleted'            => 'Branch details not deleted!Please try again later.',

        //company module messages
        'companyCodeRequired'           => 'Company code is required!',
        'companyNameRequired'           => 'Company name is required!',
        'companyCityRequired'           => 'Company city is required!',
        'companyAddressRequired'        => 'Company address is required!',
        'companySaved'                  => 'Company details saved successfully.',
        'companyUpdated'                => 'Company details has been updated successfully.',
        'companyDeleted'                => 'Company details has been deleted successfully.',
        'companyNotSaved'               => 'Company details not saved!',
        'companyNotUpdated'             => 'Company details not updated!! Details are same as previous details',
        'companyNotDeleted'             => 'Company details not deleted!Please try again later.',
        'companyExist'                  => 'Company code is already exist!',

        //department module messages
        'departmentRequired'            => 'Department is required!',
        'departmentCodeRequired'        =>  'Department code is required!',
        'departmentNameRequired'        =>  'Department name is required!',
        'departmentTypeRequired'        =>  'Department type is required!',
        'departmentAddressRequired'     =>  'Department address is required!',
        'departmentSaved'               => 'Department details saved successfully.',
        'departmentUpdated'             => 'Department details has been updated successfully.',
        'departmentDeleted'             => 'Department details has been deleted successfully.',
        'departmentNotSaved'            => 'Department details not saved!',
        'departmentNotUpdated'          => 'Department details not updated! Details are same as previous details',
        'departmentNotDeleted'          => 'Department details not deleted!Please try again later.',
        'departmentExist'               => 'Department code or name is already exist!',
        'departmentDetails'             => 'Department details not found in the CSV file you are trying to upload!',

        //units of measurements module messages
        'unitCodeRequired'              =>  'Unit code is required!',
        'unitNameRequired'              =>  'Unit name is required!',
        'unitDescRequired'              =>  'Unit description is required!',
        'unitSaved'                     => 'Unit details saved successfully.',
        'unitUpdated'                   => 'Unit details has been updated successfully.',
        'unitDeleted'                   => 'Unit details has been deleted successfully.',
        'unitNotSaved'                  => 'Unit details not saved!',
        'unitNotUpdated'                => 'Unit details not updated! Details are same as previous details',
        'unitNotDeleted'                => 'Unit details not deleted!Please try again later.',
        'unitExist'                     => 'Unit code or name is already exist!',

        //units conversions module messages
        'fromUnitRequired'              => 'From unit field is required!',
        'toUnitRequired'                => 'To unit field is required!',
        'confirmFactorRequired'         => 'Confirm factor is required!',
        'conversionCodeRequired'        => 'Unit conversion code is required!',
        'unitConNotUpdated'             => 'Unit conversion details not updated! Details are same as previous details',

        //Test Standard module messages
        'testStdCodeRequired'       =>  'Test standard code is required!',
        'testStdNameRequired'       =>  'Test standard name is required!',
        'testStdDescRequired'       =>  'Test standard Desc is required!',
        'productCategoryIdRequired' =>  'Parent Product Category is required!',
        'testStdSaved'              =>  'Test standard saved successfully.!',
        'testStdUpdated'            =>  'Test standard updated successfully.!',
        'testStdNotSaved'           =>  'Test standard not saved!',
        'testStdNotUpdated'         =>  'Test standard not updated! Details are same as previous details',
        'testStdExist'              =>  'Test standard for this category is already exist!',
        'testStdCodeExist'          =>  'Test standard code is alredy exist!',
        'testStdNameExist'          =>  'Test standard Name is already exist!',
        'testStdDeleted'            =>  'Test standard details has been deleted successfully.!',
        'testStdNotDeleted'         =>  'Test standard details not deleted!Please try again later.',
        'testStdIdRequired'         =>  'Test standard Id is required!',
        'testStdNameExist'          =>  'Test standard name already exist!',
        'testParameterRequired'     =>  'Please select atleast one test parameter!',

        //product module messages
        'productCodeRequired' =>  'Product code is required!',
        'productBarcodeRequired' =>  'Product barcode is required!',
        'productDescRequired' =>  'Product description is required!',
        'productSaved' =>  'Product saved successfully.',
        'productUpdated' =>  'Product updated successfully.',
        'productNotUpdated' =>  'Product not updated! Details are same as previous details.',
        'productNotSaved' =>  'Product not saved!',
        'productExist' =>  'Product code already exist!',
        'productDeleted' =>  'Product details has been deleted successfully.!',
        'productNotDeleted' =>  'Product details not deleted!Please try again later!',
        'productNameRequired' =>  'Product name is required!',
        'productNameCatExist' =>  'Product name and parent category already exist!',

        //test parameter categories module messages
        'categoryCodeRequired' =>  'Category code is required!',
        'categoryNameRequired' =>  'Category name is required!',
        'categoryDescRequired' =>  'Category print description is required!',
        'categorySaved' =>  'Category has been saved successfully.',
        'categoryNotSaved' =>  'Category not saved!',
        'categoryExist' =>  'Category name already exist!',
        'categoryDeleted' =>  'Category details has been deleted successfully.!',
        'categoryNotDeleted' =>  'Category details not deleted!Please try again later!',
        'categoryIDRequired' =>  'Category ID not found!Please try again later!',
        'categoryUpdated' =>  'Category  has been updated successfully.',
        'categoryNotUpdated' =>  'Category not updated! Details are same as previous details.',

        //test parameters module messages
        'parameterRequired' =>  'Test Parameter is required!',
        'parameterNotFound' =>  'Invalid test parameter name!',
        'parameterCodeRequired' =>  'Test Parameter code is required!',
        'parameterIDRequired' =>  'Test Parameter ID is required!',
        'parameterNameRequired' =>  'Test Parameter name is required!',
        'parameterDescRequired' =>  'Test Parameter print description is required!',
        'parameterCategoryRequired' =>  'Test Parameter category is required!',
        'parameterSaved' =>  'Test Parameter(s) details saved successfully.',
        'parameterNotSaved' =>  'Test Parameter details not saved!',
        'parameterExist' =>  'Test Parameter code already exist!',
        'parameterUpdated' =>  'Test Parameter details has been updated successfully.',
        'parameterNotUpdated' =>  'Test Parameter details not updated! Details are same as previous details.',
        'parameterDeleted' =>  'Test Parameter details has been deleted successfully.!',
        'parameterNotDeleted' =>  'Test Parameter details not deleted!Please try again later!',
        'parameterTestCodeExist' =>  'Test Parameters for this test parameter already exist!',
        'paraCatAndParentExist' =>  'Test Parameter category name for this product section is already exist!',
        'parameterNameExist' =>  'Test parameters name for this parameter category is already exist!',
        'parametersNotFound' =>  'Parameters not available for this product section!',
        'parameterAdded' =>  'Test Parameter details has been added successfully.',
        'parameterNameExistError' =>  'Error! This Parameter already exist for this Test Master!',
        'parameterDecimalPlaceError' =>  'Error! Decimal Place is required!',

        //standard wise product test
        'testCodeRequired'=>'Test code code is required!',
        'productRequired'=>'Product is required!',
        'wefRequired'=>'Wef Date is required!',
        'uptoRequired'=>'Upto Date is required!',
        'invalidUptoDate'=>'Upto date should be greater than wef date!',
        'productTestSaved'=>'Standard wise product test saved successfully.',
        'productTestNotSaved'=>'Standard wise product test not saved!',
        'productTestExist'=>'Test code already exist!',
        'productTestDeleted'=>'Standard wise product test details has been deleted successfully.!',
        'productTestNotDeleted'=>'Standard wise product test details not deleted!Please try again later!',
        'productTestIDRequired'=>'Product Test ID code is required!',
        'productTestUpdated'=>'Standard wise product test details has been updated successfully.',
        'productTestNotUpdated'=>'Standard wise product test details not updated! Details are same as previous details.',
        'timeTakenRequired'=>'Time is required!',
        'testparameterSaved'=>'Test Product Parameter details saved successfully.',

        //product category test parameters
        'productCatSaved'=>'Product category saved successfully.',
        'productCatNotSaved'=>'Product category not saved!',
        'productCatCodeRequired'=>'Product category is required!',
        'productCatNameRequired'=>'Product category name is required!',
        'productCatExist'=>'Product category already exist!',
        'productNameExist'=>'Product category name already exist!',
        'ParentChildSame'=>'Same category cannot be updated as parent category!',

        //product test parameters
        'testParameterIdRequired'=>'Product test parameter ID is required!',
        'stdValueTypeRequired'=>'Standard value type is required!',
        'stdValuefromRequired'=>'Standard value from is required!',
        'stdValuetoRequired'=>'Standard value to is required!',
        'costPriceRequired'=>'Cost Price is required!',
        'sellingPriceRequired'=>'Selling Price is required!',
        'costGreaterSellingRequired'=>'Selling Price should be greater than cost price!',
        'productTestParametersDeleted'=>'Product test parameter details has been deleted successfully.!',
        'productTestParametersNotDeleted'=>'Product test parameter details not deleted!Please try again later!',
        'productTestCodeRequired'=>'Product test code is required!',
        'consumptionRequired'=>'Product test code is required!',
        'claimDependentRequired'=>'Claim dependent is required!',
        'timeTakenRequired'=>'Time Taken is required!',
        'descriptionRequired'=>'Description is required!',
        'detectorRequired'=>'Detector is required!',
        'decimalPlaceError' =>  'Error! Decimal Place is required!',

        //alternative method usage
        'parameterAlternativeSaved'=>'Product test parameter alternative method saved successfully.',
        'parameterAlternativeNotSaved'=>'Product test parameter alternative method not saved!',
        'alternativeAlreadyExist'=>'Product test parameter alternative method already exist!',
        'productTestAltMethodDeleted'=>'Product test parameter alternative method details has been deleted successfully.!',
        'productTestAltMethodNotDeleted'=>'Product test parameter alternative method details not deleted!Please try again later!',
        'parameterNotFound'=>'Product test parameter not found!',
        'altMethodUpdated'=>'Product test parameter alternative method updated successfully.',
        'altMethodNotUpdated'=>'Product test parameter alternative method not updated! Details are same as previous details.',

        //product test parameters BOM
        'testParameterBomSaved'=>'Test parameter BOM saved successfully.',
        'testParameterBomNotSaved'=>'Test parameter BOM saved successfully.',
        'productTestParametersBOMDeleted'=>'Test parameter BOM details has been deleted successfully.!',
        'productTestParametersBOMNotDeleted'=>'Test parameter BOM details not deleted!Please try again later!',
        'parameterBOMUpdated'=>'Test parameter BOM details has been updated successfully.',
        'parameterBOMNotUpdated'=>'Test parameter BOM details not updated!Please try again later!',

        //equipment module messages
        'equipmentRequired'     =>  'Equipment Type is required!',
        'equipmentCodeRequired' =>  'Equipment code is required!',
        'equipmentNameRequired' =>  'Equipment name is required!',
        'equipmentCapacityRequired' => 'Equipment capacity is required!',
        'equipmentCapacityNumericRequired' => 'Equipment capacity should be in numeric!',
        'equipmentDescRequired' =>  'Equipment description is required!',
        'equipmentSaved'        =>  'Equipment saved successfully.',
        'equipmentUpdated'      =>  'Equipment updated successfully.',
        'equipmentNotUpdated'   =>  'Equipment not updated! Details are same as previous details.',
        'equipmentNotSaved'     =>  'Equipment not saved!',
        'equipmentExist'        =>  'Equipment already exist!',
        'equipmentNameExist'    =>  'Equipment Name already exist!',
        'equipmentDeleted'      =>  'Equipment details has been deleted successfully.!',
        'equipmentNotDeleted'   =>  'Equipment details not deleted!Please try again later!',
        'equipmentQtyRequired'  =>  'Equipment quantity is required!',
        'methodCodeRequired'    =>  'Method code is required!',
        'methodNameRequired'    =>  'Method name is required!',
        'methodDescRequired'    =>  'Method description is required!',
        'methodSaved'           =>  'Method saved successfully.',
        'methodUpdated'         =>  'Method updated successfully.',
        'methodNotUpdated'      =>  'Method not updated! Details are same as previous details.',
        'methodNotSaved'        =>  'Method not saved!',
        'methodExist'           =>  'Method code already exist!',
        'methodNameExist'       =>  'Method name for this equipment is already exist!',
        'methodDeleted'         =>  'Method details has been deleted successfully.!',
        'methodNotDeleted'      =>  'Method details not deleted!Please try again later!',

        //detector module messages
        'detectorCodeRequired'    =>  'Detector code is required!',
        'detectorNameRequired'    =>  'Detector name is required!',
        'detectorDescRequired'    =>  'Detector description is required!',
        'detectorSaved'           =>  'Detector saved successfully.',
        'detectorUpdated'         =>  'Detector updated successfully.',
        'detectorNotUpdated'      =>  'Detector not updated! Details are same as previous details.',
        'detectorNotSaved'        =>  'Detector not saved!',
        'detectorExist'           =>  'Detector code already exist!',
        'detectorNameExist'       =>  'Detector name for this equipment is already exist!',
        'detectorDeleted'         =>  'Detector details has been deleted successfully.!',
        'detectorNotDeleted'      =>  'Detector details not deleted!Please try again later!',
        
        //template module messages
        'templateSaved'           =>  'Templates saved successfully.',
        'templateNotSaved'        =>  'Templates not saved!',
        'templateUpdated'         =>  'Templates updated successfully.',
        'templateHeaderContent'   =>  'Error! Templates header  required',
        'templateFooterContent'   =>  'Error! Templates footer  required.',
        'templateDeleted'         =>  'Template details has been deleted successfully.',
        'templateNotDeleted'      =>  'Template details not deleted! Please try again later.',
        'templatesDetailExist'    =>  'Error! Template details already exist.',
        'templatesTypeRequired'    =>  'Error! Template type required.',
        
        //state module messages
        'stateCodeRequired' =>  'Error! State code is required!',
        'stateNameRequired' =>  'Error! State name is required.',
        'stateCountryRequired' =>  'State country is required!',
        'stateStatusRequired' =>  'State status is required!',
        'stateSaved' =>  'State saved successfully.',
        'stateUpdated' =>  'State updated successfully.',
        'stateNotUpdated' =>  'State not updated! Details are same as previous details.',
        'stateNotSaved' =>  'State not saved!',
        'stateExist' =>  'State already exist!',
        'stateDeleted' =>  'State details has been deleted successfully.!',
        'stateNotDeleted' =>  'State details not deleted!Please try again later!',
        'stateCodeExist' =>  'Error! State code and State Name already exist!',

        //holiday module messages
        'holidayNameRequired' =>  'Error! holiday name is required!',
        'holidayDateRequired' =>  'Error! holiday date is required.',
        'holidayStatusRequired' =>  'Status is required!',
        'holidayDeleted' =>  'Holiday details has been deleted successfully.!',
        'holidayNotDeleted' =>  'Holiday details not deleted!Please try again later!',
        'holidayUpdated' =>  'Holiday updated successfully.',

	//City module messages
        'cityCodeRequired' =>  'City code is required!',
        'cityNameRequired' =>  'City name is required!',
        'cityStateRequired' =>  'City state is required!',
        'citySaved' =>  'City saved successfully.',
        'cityUpdated' =>  'City updated successfully.',
        'cityNotUpdated' =>  'City not updated! Details are same as previous details.',
        'cityNotSaved' =>  'City not saved!',
        'cityExist' =>  'City code already exist!',
        'cityDeleted' =>  'City details has been deleted successfully.!',
        'cityNotDeleted' =>  'City details not deleted!Please try again later!',

	//Ownership module messages
        'ownershipCodeRequired' =>  'Ownership code is required!',
        'ownershipNameRequired' =>  'Ownership name is required!',
        'ownershipSaved' =>  'Ownership saved successfully.',
        'ownershipUpdated' =>  'Ownership updated successfully.',
        'ownershipNotUpdated' =>  'Ownership not updated! Details are same as previous details.',
        'ownershipNotSaved' =>  'Ownership not saved!',
        'ownershipExist' =>  'Ownership code or name already exist!',
        'ownershipDeleted' =>  'Ownership details has been deleted successfully.!',
        'ownershipNotDeleted' =>  'Ownership details not deleted!Please try again later!',

	//Company type module messages
        'companyTypeCodeRequired' =>  'Company type code is required!',
        'companyTypeNameRequired' =>  'Company type name is required!',
        'companyTypeSaved' =>  'Company type saved successfully.',
        'companyTypeUpdated' =>  'Company type updated successfully.',
        'companyTypeNotUpdated' =>  'Company type not updated! Details are same as previous details.',
        'companyTypeNotSaved' =>  'Company type not saved!',
        'companyTypeExist' =>  'Company type code already exist!',
        'companyTypeDeleted' =>  'Company type details has been deleted successfully.!',
        'companyTypeNotDeleted' =>  'Company type details not deleted!Please try again later!',

        //inquiry section start here
        'inquiryCustomerRequired' =>  'Customer fields is required!',
        'iniquryDateRequired' =>  'Inquiry date fields is required!',
        'inquiryGenerated' =>  'Inquiry generated successfully.',
        'inquiryGenerated' =>  'Inquiry generated successfully.',
        'inquryNotGenerated' =>  'Sorry inquiry not generated.',
        'inquryFolloupGenerated' =>  'Followup generated successfully.',
        'inquryFolloupNotGenerated' =>  'Sorry followup not generated for this inquiry please try again.',
        'inquryIdRequired' =>  'Sorry not found any inquiry id to add folloup.',
        'inquiryFollowupRequired' =>  'Please fill all mandatory fields!',
        'inquiryFollowupNotFound' =>  'Not found any followup for inquiry please add some!',
        'inquiryDeletedSuccessfully' =>  'Thank you.Inquiry and its follow-up deleted successfully !',
        'inquiryDeletedFailled' =>  'Opps ! failed to delete inquiry try again later',
        'folloupDeletedSuccessfully' =>  'Thank you.Follow-up deleted successfully !',
        'folloupDeletedFailled' =>  'Opps ! failed to delete folloup please try again later',
        'inquiryReportDateRequired' =>  'Please select the date field is mandatory',
        'inquiryReportDataNotFound' =>  'Not found any data based on your criteria',
        'inquiryNotFound' =>  'Inquiry not found!',
        'invalidNextFollowDate' =>  'Next Follow-up Date should be greater than Inquiry date!',
        'invalidFollowupDate' =>  'Next follow-up date should be greater than previous follow-up date!',
        'dateFromRequired' =>  'Date From fields is required!',

        //Orders module Mesage
        'OrderPlacedMsg'                => 'Success! Order has been placed successfully.',
        'OrderNotPlacedMsg'             => 'Error! Order cannot be placed right now.Please try later.',
        'OrderNotUpdatedMsg'            => 'Error! Order cannot be updated right now.Please try later.',
        'OrderDateErrorMsg'             => 'Error! Order Date is required.',
        'OrderInValidOrderDateMsg'      => 'Error! Invalid date format for Order Date.',
        'OrderInValidDateOfMfgMsg'      => 'Error! Invalid date format for Date of Mfg.',
        'OrderInValideExpiryDateMsg'    => 'Error! Invalid date format for Expiry Date.',
        'claimValueErrorMsg'            => 'Error! Claim Value is required.',
        'claimValueUnitErrorMsg'        => 'Error! Claim Value Unit is required.',
        'OrderInternalErrorMsg'         => 'Error! Internal Error occurs.Please try again.',
        'OrderProductTestParamsMsg'     => 'Error! Product Test Parameters is required.',
        'OrderDeleteMsg'                => 'Success! Order has been deleted successfully.',
        'OrderParameterDeleteMsg'       => 'Success! Order Parameter has been deleted successfully.',
        'OrderReferenceNoErrorMsg'      => 'Error! Reference Number should be unique.',
        'orderForeignKeConstraintFail'  => 'Error! Order cannot be deleted.',
        'customerNameRequired'          => 'Error! Customer Name is required!',
        'divisionNameRequired'          => 'Error! Branch Name is required.',
        'referenceNoRequired'           => 'Error! Reference Number is required.',
        'sampleDescriptionRequired'     => 'Error! Sample Description is required.',
        'sampleDescriptionNotExist'     => 'Error! Sample Description doesnot Exist.Please Register the Sample Description.',
        'batchNoRequired'               => 'Error! Batch Number is required.',
        'isSealedRequired'              => 'Error! Sealed/Unsealed is required.',
        'isSignedRequired'              => 'Error! Signed/Unsigned is required.',
        'packingModeRequired'           => 'Error! Packing Mode is required.',
        'submissionTypeRequired'        => 'Error! Submission Type Mode is required.',
        'samplingDateRequired'          => 'Error! Sampling Date is required.',
        'OrderCancelMsg'                => 'Success! Order has been cancelled successfully',
        'OrderCancelFailedMsg'          => 'Error! Order cannot be cancelled right now.Please try later.',
        'OrderDispatchedMsg'            => 'Success! Order has been dispatched successfully',
        'OrderDispatchedFailedMsg'      => 'Error! Order cannot be dispatched right now.Please try later.',
        'OrdePdfMsg'                    => 'Success! Order Pdf has been generated successfully.',
        'stabilityIdRequired'           => 'Error! Real Time Stabilty is required.',
        'headerNoteRequired'            => 'Error! Header Note is required.',
        'InvocingTypeRequired'          => 'Error! No Invoicing rate defined for this customer.',
        'sampleReceivingCodeRequired'   => 'Error! Sample Receiving Code is required.',
        'orderDateSamplingDateMismatch' => 'Error! Sampling Date should not be greater than Order Date.',
        'samplePoNoRequired'            => 'Error! PO No. is required.',
        'samplePoDateRequired'          => 'Error! PO Date is required.',
        'validSamplePoDateRequired'     => 'Error! Invalid PO Date.',
        'sampleTypeRequired'            => 'Error! Sample Type Inter-Laboratory/Compensatory is required.',
        'sampleHoldTypeRequired'        => 'Error! Sample Hold Reason is required.',
        'orderDateSampleReceDateMismatch'       => 'Error! Order Date should not be less than Sample Receiving Date.',
        'mismatchSampleAndTestProductCategory'  => 'Error! Sample Receiving department and Test Product department should be of same department.',
        'samplePriorityIdRequired'              => 'Error! Sample Priority is required.',
        'expectedDueDateRequired'               => 'Error! Expected Due Date is required.',
        'expectedDueDayRequired'                => 'Error! No. of Day is required.',
        'brandTypeRequired'                     => 'Error! Brand Name is required.',
        'runningTimeRequiredErrorMsg'           => 'Error! Running Time is required.',
        'noOfInjectionRequiredErrorMsg'         => 'Error! No. of Injection is required.',
        'disintegrationTimeRequiredErrorMsg'    => 'Error! Disintegration Time Limit is required.',
        'errorProcessingMsg'                    => 'Error! Error in processing this request.Please contact Administrator!',
        'unHoldSuccessMsg'                      => 'Success! Order has been unhold successfully.You can proceed this order for next phases!',
        'totalOrderInSampleCountMsg'            => 'Number of Order updated by changing the Customer Name : ',
        'tatInDaysRequiredErrorMsg'             => 'Error! TAT in days is required.',
        'decimalPlaceValueError'                => 'Error! Invlaid Decimal Place Value!',
        'nablScopeBackDateBookingError'         => 'Error! Order cannot be booked in back date as Test Parameter lies in NABL Scope.',
        'reportingToRequired'                   => 'Error! ReportingTo is required.',
        'invoicingToRequired'                   => 'Error! InvoicingTo is required.',
        'reportingToOrInvoicingToRequired'      => 'Error! ReportingTo/InvoicingTo is required.',
        'trfNoErrorRequired'                    => 'Error! TRF No. is required.',
        'trfFileErrorRequired'                  => 'Error! TRF file is required.',
        'trfFileInvalidErrorMsg'                => 'Error! Invalid File selection.Please select the valid file Type!',
        'orderFieldNameErrorRequired'           => 'Error! Field Name is required.',
        'orderFieldValueErrorRequired'          => 'Error! Field Value is required.',
        'sampleConditionErrorRequired'          => 'Error! Sample Condition is required.',
        
        //inventory category module
        'itemCatCodeRequired'         =>  'Item category code is required!',
        'itemCatNameRequired'         =>  'Item name is required!',
        'orderCustomerChangeErrorMsg' =>  'Error! Customer Name cannot be modified as sample receiving code has multiple order booking.',

        //item master
        'itemCodeRequired'       =>  'Item code is required!',
        'itemBarcodeRequired'    =>  'Item barcode is required!',
        'itemDescRequired'       =>  'Item description is required!',
        'itemNameRequired'       =>  'Item name is required!',
        'itemCodeExist'	         =>  'Item code or barcode already exist!',
        'itemImageUploaded'	 =>  'Item Image has been uploaded successfully.',
        'itemImageRemoved'	 =>  'Item Image has been removed successfully.',
        'itemForeignKeyConsFail' =>  'Item cannot be deleted.',
        'itemBarcodeExist'       =>  'Item barcode already exist.',
        'itemCodeExist'          =>  'Item code already exist.',

        //report module Mesage
        'orderMovedForInvoice'           =>  'Success! Order has been finalized for the Invoicing.',
        'testParamRequired'              =>  'Error! Please enter the result.',
        'reportDeleteMsg'                =>  'Success! Report has been deleted successfully.',
        'reportForeignKeConstFail'       =>  'Error! Report cannot be deleted.',
        'reportDetailsSaved'             =>  'Success! Report details has been saved successfully.',
        'reportDetailsUpdated' 	         =>  'Success! Report details has been updated successfully.',
        'reportGenerated' 	         =>  'Success! Report has been generated successfully.',
        'gradeTypeRequired' 	         =>  'Error! Grade is required!',
        'refSampleValueRequired'         =>  'Error! Ref sample value is required!',
        'resultDrivedValueRequired'      =>  'Error! Result drived value is required!',
        'deviationValueRequired'         =>  'Error! Result deviation value is required!',
        'remarkValue' 		         =>  'Error! Remark value is required!',
        'amendmentNoRequired' 	         =>  'Error! With Amendment No. is required!',
        'undefinedProductSection'        =>  'Error! Undefined product section!',
        'reportDateRequiredError'        =>  'Error! Report Date is required.',
        'reportDateValidationError'      =>  'Error! Report Date should be greater than or equal to Order Date.',
        'amendmentNumber'                =>  'Error! Please check amendment number checkbox!',
        'reportHeaderFooterErrorMsg'     =>  'Error! Header and Footer of Test Report Not Found!',
        'reportStageMessage'             =>  'Error! Report is in testing stage.Please refresh your window!',
        'actionAlreadyPerformedMsg'      =>  'Alert! Other Section-Incharge of this Order already taken the action.Please refresh/Click on Back Button!',
        'sectionInchargeMissingErrorMsg' =>  'Error! No Section Incharge defined for this Order.Please contact Administrator.',
        'sectionInchargeSignErrorMsg'    =>  'Error! Please upload the Signature of Section Incharge.',
        'microbiologistNotFoundError'    =>  'Error! No Microbiologist defined for this branch!',
        'microbiologistRightErrorMsg'    =>  'Error! Please contact Administrator for assigning the Microbilogical Instrument!',
        'inactiveAnalystErrorMsg'        =>  'Alert! Listed Analyst are unavailable or left the organization : ',
        'stabilityRemarkValueRequired'   =>  'Error! Stability Remark is required!',
        'groupNameRequiredErrorMsg'      =>  'Error! Group Name is required!',
        'groupNameAllRequiredErrorMsg'   =>  'Error! Please select all the required Group Name!',
        
        //Invoice module Mesage
        'customerRequired'                  =>  'Error! No customer found for invoicing.',
        'customerSelectionRequired'         =>  'Error! Please select the customer for invoicing.',
        'selectCustomerForInvoiceDisplay'   =>  'Error! Please select the customer to display all invoices.',
        'noInvoiceRequired'                 =>  'Success! No Invoice found.',
        'invoicesSuccess'                   =>  'Invoice has been generated successfully.',
        'invoiceDeleteMsg'                  =>  'Success! Invoice has been deleted successfully. ',
        'invoiceForeignKeConstFail'         =>  'Error! Invoice cannot be deleted.',
        'invoiceGenerated'                  =>  'Success! Invoice has been generated successfully.',
        'invoicePONumber' 	            =>  'Error! PO number is required.Please check atleast one checkbox from purchase order listing.',
        'invoiceCancelledMsg'               =>  'Success! Invoice has been cancelled successfully.',
        'invoiceDispatchedMsg'              =>  'Success! Invoice has been dispatched successfully',
        'invoiceRegeneratedOpenMsg'         =>  'Success! Invoice has been cancelled successfully and its related Orders has been moved to Invoicing Stage.',
        'NoTaxSlabDefinedForThisCustomer'   =>  'Alert! No Tax Slab defined for this Customer.Please update the Tax Slab for this Customer!',
        'cancelledWithRelatedOrdersError'   =>  'Error! Please select the cancellation Type.',        
        'cancellationDescriptionError'      =>  'Error! Please enter the reason of cancellation.',        
        'invoiceCancApprovedByError'        =>  'Error! Please enter the Approved By.',
        'invoiceCancApprovedDateError'      =>  'Error! Please enter the Approved Date.',

        //Vendor Module message
        'divisionNameRequired'          => 'Error! Branch Name is required.',
        'vendorCodeRequired'            => 'Error! Vendor Code is required.',
        'vendorCodeExistentence'        => 'Error! Vendor Code already exists.',
        'vendorNameRequired'            => 'Error! Vendor Name is required.',
        'vendorEmailRequired'           => 'Error! Vendor Email is required.',
        'vendorEmailExist'              => 'Error! This email already exist.',
        'vendorEmailValid'              => 'Error! Please enter a valid Email.',
        'vendorMobileRequired'          => 'Error! Vendor Mobile is required.',
        'vendorMobileExist'             => 'Error! Mobile Number already exist.',
        'vendorStateRequired'           => 'Error! Vendor State is required.',
        'vendorCityRequired'            => 'Error! Vendor City is required.',
        'vendorPincodeRequired'         => 'Error! Vendor Pincode is required.',
        'vendorAddressRequired'         => 'Error! Vendor Address is required.',
        'vendorForeignKeConstraintFail' => 'Error! Vendor cannot be deleted.',

        //Iventory RMS Module message
        'reqSlipDateRequired'        => 'Slip Date is required.',
        'reqDepartmentIdRequired'    => 'Department is required.',
        'reqByRequired'              => 'Issued By is required.',
        'reqSaved'                   => 'MRS has been generated successfully.',
        'reqUpdated'                 => 'MRS has been updated successfully.',
        'MRSNotGenerated'            => 'MRS has not been generated!',

        //Iventory indent Module message
        'indentDateRequired'            => 'Indent Date is required.',
        'indentNumberRequired'          => 'Indent Number is required.',
        'indentByRequired'              => 'Indented By is required.',
        'indentSaved'                   => 'Indent has been generated successfully.',
        'indentUpdated'                 => 'Indent has been updated successfully.',
        'indentNotGenerated'            => 'Indent has not been generated!',

        //Iventory Branch Wise Store message
        'storeCodeRequired'        => 'Error! Store Code is required.',
        'storeNameRequired'        => 'Error! Store Name is required.',
        'storeCodeExistError'      => 'Error! Store Code already exist.',
        'storeForeignKeyConsFail'  => 'Error! Store cannot be deleted.',
        'storeDataNotFound'        => 'Error! Store doesnot exist.',
        'divisionNameExist'        => 'Error! Branch Name is required.',

        //Iventory Branch Wise Store message
        'storeNameRequired'            => 'Error! Store Name is required.',
        'itemNameRequired'             => 'Error! Item Name is required.',
        'divisionNameRequired'         => 'Error! Division Name is required.',
        'openningBalanceRequired'      => 'Error! openning Balance is required.',
        'openningBalanceDateRequired'  => 'Error! openning Balance Date is required.',
        'stockForeignKeyConsFail'      => 'Error! Stock cannot be deleted.',
        'stockDataNotFound'            => 'Error! Item Stock doesnot exist.',
        'storeDivisionWiseExist'       => 'Error! Branch already added.',

        //Inventory Purchase Order Message
        'divisionNameErrorMsg'        => 'Error! Branch Name is required.',
        'vendorNameErrorMsg'          => 'Error! Vendor Name is required.',
        'paymentTermErrorMsg'         => 'Error! Payment Term is required.',
        'amendmentNoErrorMsg'         => 'Error! Amendment No is required.',
        'amendmentDateErrorMsg'       => 'Error! Amendment Date is required.',
        'amendmentDetailErrorMsg'     => 'Error! Amendment Detail is required.',
        'itemNameErrorMsg'            => 'Error! Item Name is required.',
        'itemQtyErrorMsg'             => 'Error! Item Qty is required.',
        'itemRateErrorMsg'            => 'Error! Item Rate is required.',
        'itemAmountErrorMsg'          => 'Error! Item Amount is required.',
        'totalQtyErrorMsg'            => 'Error! Total Qty is required.',
        'grossTotalErrorMsg'          => 'Error! Gross Total is required.',
        'itemDiscountErrorMsg'        => 'Error! Item discount is required.',
        'exciseDutyRateErrorMsg'      => 'Error! Excise duty rate is required.',
        'salesTaxRateErrorMsg'        => 'Error! Sale tax rate is required.',
        'grandTotalErrorMsg'          => 'Error! Grand Total rate is required.',
        'draftPoSuccessMsg'           => 'Success! Draft PO has been generated successfully.',
        'draftPoErrorMsg'             => 'Error! Error in generating Draft PO.Please try later.',
        'deletedErrorFKC'             => 'Error! Entry cannot be deleted.',
        'poSuccessMsg'                => 'Success! PO has been generated successfully.',
        'poErrorMsg'                  => 'Error! Error occur in generating PO.Please try later.',
        'dpoToPOConvertError'         => 'Error! Error occur in converting Draft PO to PO.Please try later.',
        'dpoToPOConvertSuccess'       => 'Success! Draft PO has been successfully converted into PO.',
        'poAmendSuccessMsg'           => 'Success! PO has been amended successfully.',
        'poAmendErrorMsg'             => 'Error! Error occur in amending PO.Please try later.',
        'poFinalizeSuccessMsg'        => 'Success! PO has been closed successfully.',
        'poFinalizeErrorMsg'          => 'Error! Error occur in closing PO.Please try later.',

        //Inventory IGN Message
        'ignNoRequiredMsg'           => 'Error! IGN No.is required.',
        'ignDateRequiredMsg'         => 'Error! IGN Date is required.',
        'divisionRequiredMsg'        => 'Error! Division Name is required.',
        'vendorRequiredMsg'          => 'Error! Vendor Name is required.',
        'vendorBillNoRequiredMsg'    => 'Error! Vendor Bill No. is required.',
        'vendorBillDateRequiredMsg'  => 'Error! Vendor Bill Date is required.',
        'gatePassNoRequiredMsg'      => 'Error! Gate Pass No.is required.',
        'employeeRequiredMsg'        => 'Error! Employee Name is required.',
        'employeeDetailRequiredMsg'  => 'Error! Employee Detail is required.',
        'itemNameErrorMsg'           => 'Error! Item Name is required.',
        'expiryDateErrorMsg'         => 'Error! Expiry Date is required.',
        'billQtyErrorMsg'            => 'Error! Bill Qty is required.',
        'receivedQtyErrorMsg'        => 'Error! Received Qty is required.',
        'okQtyErrorMsg'              => 'Error! OK Qty is required.',
        'billRateErrorMsg'           => 'Error! Bill Rate is required.',
        'passRateErrorMsg'           => 'Error! Pass Rate is required.',
        'landingCostErrorMsg'        => 'Error! Landing Cost is required.',
        'totalBillAmountErrorMsg'    => 'Error! Total Bill Amount is required.',
        'totalPassAmountErrorMsg'    => 'Error! Total Pass Amount is required.',
        'vendorBillNoExistMsg'       => 'Error! Vendor Bill No. already exist.',
        'gatePassNoExistMsg'         => 'Error! Gate Pass No. already exist.',

        //Modules message
        'moduleCategoryRequired'      => 'Error! Module Category is required.',
        'moduleNameRequired'          => 'Error! Module Name is required.',
        'moduleNameExist'	      => 'Error! Module Name  already exist!',
        'moduleLinkExist'	      => 'Error! Module Link already exist!',
        'moduleLevelRequired'         => 'Error! Module Level is required.',
        'moduleStatusRequired'        => 'Error! Module Status is required.',
        'moduleDataNotFound'          => 'Error! Module data doesnot found.',
        'moduleForeignKeyConsFail'    => 'Error! Module cannot be deleted.',

        //module Permissions
        'modulePermissionsSaved'    => 'Success! Module permissions saved successfully.',
        'modulePermissionsNotSaved' => 'Error!  Module permissions not saved.',
        'modulePermissionsEmpty'   	=> 'Error!  Plese select module permissions.',
        'noChangeErrorMsg'          => 'Success! No change has been made.',

        //Payments Received
        'divisionNameErrorMsg'        => 'Error! Branch Name is required.',
        'customerNameRequired'        => 'Error! Customer Name is required!',
        'paymentReceivedNoRequired'   => 'Error! Payment Received No. is required!',
        'paymentReceivedNoExist'      => 'Error! Payment Received No. already exist!',
        'paymentReceivedDateRequired' => 'Error! Payment Received Date is required!',
        'amountReceivedRequired'      => 'Error! Amount Received is required!',
        'depositedWithRequired'       => 'Error! Deposited with is required!',

        //Payments Made
        'divisionNameErrorMsg'        => 'Error! Branch Name is required.',
        'vendorNameRequired'          => 'Error! Vendor Name is required!',
        'paymentMadeNoRequired'       => 'Error! Payment Made No. is required!',
        'paymentMadeNoExist'          => 'Error! Payment Made No. already exist!',
        'paymentMadeDateRequired'     => 'Error! Payment Made Date is required!',
        'amountMadeRequired'          => 'Error! Amount Made is required!',
        'paymentSourceRequired'       => 'Error! Paid From is required!',

        //payment sources
        'paymentSourceIdRequired'      => 'Error! Payment source id is required.',
        'paymentSourceNameRequired'    => 'Error! Payment source name is required.',
        'paymentSourceDescRequired'    => 'Error! Payment source description is required.',
        'paymentSourceSaved'           => 'Success! Payment source saved successfully.',
        'paymentSourceExist'           => 'Error! Payment source already exist.',

        //Credit Note Messages
        'divisionNameCNErrorMsg'        => 'Error! Branch Name is required.',
        'departmentNameCNRequired'      => 'Error! Department is required!',
        'customerNameCNRequired'        => 'Error! Customer Name is required!',
        'creditNoteNoRequired'          => 'Error! Credit Note No. is required!',
        'creditNoteNoExist'             => 'Error! Credit Note No. already exist!',
        'creditNoteDateRequired'        => 'Error! Credit Note Date is required!',
        'creditNoteAmountRequired'      => 'Error! Credit Note Amount is required!',
        'creditNoteRemarkRequired'      => 'Error! Credit Note Remark is required!',
        'customerCreditRefNoRequired'   => 'Error! Reference Number is required!',
        
        //Debit Note Messages
        'divisionNameDNErrorMsg'        => 'Error! Branch Name is required.',
        'departmentNameDNRequired'      => 'Error! Department is required!',
        'customerNameDNRequired'        => 'Error! Customer Name is required!',
        'customerInvoiceNumberRequired' =>  'Error! Invoice Number is required!',
        'debitNoteNoRequired'           => 'Error! Debit Note No. is required!',
        'debitNoteNoExist'              => 'Error! Debit Note No. already exist!',
        'debitNoteDateRequired'         => 'Error! Debit Note Date is required!',
        'debitNoteAmountRequired'       => 'Error! Debit Note Amount is required!',
        'debitNoteRemarkRequired'       => 'Error! Debit Note Remark is required!',
        'customerDebitRefNoRequired'    => 'Error! Reference Number is required!',

        //auto generated numbers prefix
        'branchPrefix'      => 'BR',
        'departmentPrefix'  => 'DEPT',
        'customerPrefix'    => 'CUST',
        'proCatPrefix'      => 'PROCAT',
        'productPrefix'     => 'PRO',
        'equipmentPrefix'   => 'EQU',
        'methodPrefix'      => 'METH',
        'paraCatPrefix'     => 'PARACAT',
        'parameterPrefix'   => 'PARA',
        'standardPrefix'    => 'TESTSTD',
        'testPrefix'        => 'TEST',
        'ownershipPrefix'   => 'OT',
        'companyTypePrefix' => 'COM',
        'itemPrefix'        => 'ITEM',
        'itemCatPrefix'     => 'ITEMCAT',
        'unitPrefix'        => 'UNIT',
        'vendorPrefix'      => 'VEN',
        'storePrefix'       => 'STORE',
        'reportPrefix'      => 'R-',
        'detectorPrefix'    => 'DET',
        'amendmentPrefix'   => 'AMD',
        'holdPrefix'        => 'HLD',
        'columnPrefix'      => 'COL',
        'instancePrefix'    => 'INS',
        
        //Sample Receiving Messages
        'productCategoryNameRequired' =>  'Category is required!',
        'sampleModeRequired'          =>  'Sample Mode is required!',
        'sampleCustomerNameRequired'  =>  'Customer name is required!',
        'sampleCustomerEmailRequired' =>  'Customer email is required!',
        'sampleCustomerEmailRequired' =>   'Email already exist!',
        'sameBookingDateUpdateError'  =>   'Error! Order Booking date not found of this Sample No.!',
        'trfNumberUpdateError'        =>   'Error! TRF Detail cannot be updated with respect to Deparment and Customer Name!',

        //customer product master module messages
        'customerProductName' =>  'Customer product name is required!',
        'customerProductId' =>  'Customer product id is required!',
        'productName' =>  'Product is required!',
        'customerProductExist' =>  'Customer product name for this product is alredy exist!',

        //Invoicing Type Messages
        'stateNameRequired'             =>  'Error! State name is required.',
        'cityNameRequired'              =>  'Error! City name is required.',
        'productNameRequired'           =>  'Error! Product is required.',
        'invoicingRateRequired'         =>  'Error! Invoicing Rate is required.',
        'stateProductNameExist'         =>  'Error! Record already available.',
        'customerNameRequired'          =>  'Error! Customer name is required.',
        'customerInvoicingExist'        =>  'Error! Customer invoicing rate already exist.',
        'customerInvoicingRateExist'    =>  'Error! Product rate for selected customer is already exist.',
        'categoryParametersNotFound'    => 'Error! No parameters found for this category.',
        'parameterCategoryNotFound'     => 'Error! No parameter category found.',
        'productCatNameRequired'        =>  'Error! Department name is required.',

        // default setting message
        'settingKeyRequired'        => 'Error! Setting Key is required.!',
        'settingValueRequired'      => 'Error! Setting Value is required.!',
        'settingGroupRequired'      =>  'Error! Setting Group is required.!',
        'settingDeleted'            =>  'Success! Setting details has been deleted successfully.!',
        'settingNotDeleted'         =>  'Error! Setting details not deleted!Please try again later!',
        'settingUpdated'            =>  'Success! Setting details has been updated successfully!',
        'settingNotUpdated'         =>  'Success! No change has been made!',
        'InvalidTentativeDate'      =>  'Error! Tentative Date should be greater than order date!',

        //Dispatch Order Messages
        'arBillNoRequired'          => 'Error! AR Bill Number is required.!',
        'invalidDispatchArNoMsg'    => 'Error! Invalid AR Bill Number!',
        'dispatchDateRequired'      => 'Error! Dispatch Date is required.!',
        'orderIdRequired'           => 'Error! Order Not found!',

        //Customer wise Invoicing Assay rates
        'circustomerNameRequired'           =>  'Error! Customer name is required!',
        'cirProductCategoryRequired'        =>  'Error! Department is required!',
        'cirPCategoryIdRequired'            =>  'Error! Product Category is required!',
        'cirSubCategoryIdRequired'          =>  'Error! Sub Product Category is required!',
        'cirTestParameterCategoryRequired'  =>  'Error! Test Parameter Category is required!',
        'ciEquipmentTypeRequired'           =>  'Error! Equipment Type is required!',
        'cirEquipmentCountRequired'         =>  'Error! Equipment Count is required!',
        'cirDetectorNameRequired'           =>  'Error! Detector Name is required!',
        'cirRunningTimeRequired'            =>  'Error! Running Time is required!',
        'cirNoOfInjectionRequired'          =>  'Error! No. Of Injection is required!',

        //Default Remarks Messages
        'departmentRequired'                =>  'Error! Department name is required!',
        'defaultRemarkRequired'             =>  'Error! Remarks  is required!',
        'defaultRemarkTypeRequired'         =>  'Error! Remarks type is required!',
        'defaultRemarkStatusRequired'       =>   'Error! Remarks Status is required!',
        'defaultRemarkDeleted'              =>  'Success! Entry has been deleted successfully.',
        'defaultRemarkNotDeleted'           =>   'Remark not deleted!Please try again later.',

        //Custom Defined Fields Messages
        'labelNameRequired'                 =>  'Error! Label name is required!',
        'labelValueRequired'                =>  'Error! Label value is required!',
        'labelStatusRequired'               =>  'Error! Label status is required!',
        'customDefinedFieldskDeleted'       =>  'Success! Entry has been deleted successfully.',
        'CustomDefinedFieldsNotDeleted'     =>   'Remark not deleted!Please try again later.',
        
        //Order Cancellation Message
        'cancellationTypeRequired'          =>  'Error! Cancellation Type is required!',
        'cancellationDescriptionRequired'   =>  'Error! Cancellation Description is required!',
        'cancellationInvalidRequired'       =>  'Error! Invoice Generated Order cannot be cancelled!',

        //accreditation certificate master message
        'accreditationCertificateNameRequired'  =>'Error! Accreditation certificate name is required!',
        'accreditationMultiLocationRequired'    =>'Error! Multi location lab is required!',
        'accreditationStatusRequired'           =>'Error! Accreditation status is required!',
        'certificateSaved'                      =>'Accreditation certificate has been saved successfully.',
        'certificateNotSaved'                   =>'Accreditation certificate not saved.',
        'certificateUpdated'                    =>'Accreditation certificate has been updated successfully.',
        'certificateNotUpdated'                 =>'Accreditation certificate not updated.',
        'accreditationCertificateNameLength'    =>'Accreditation certificate has maximum length of 6 characters/digits.',
        'certificateDeleted'                    =>'Accreditation certificate deleted successfully.',
        'certificateNotDeleted'                 =>'Accreditation certificate not deleted successfully.',
        
        //amendment module messages( 27-12-2018 )
        'amendmentNameRequired'     =>  'Error! amendment name is required!',
        'amendmentCodeRequired'     =>  'Error! amendment code is required.',
        'amendmentStatusRequired'   =>  'Status is required!',
        'amendmentDeleted'          =>  'Amendment details has been deleted successfully.!',
        'amendmentNotDeleted'       =>  'Amendment details not deleted!Please try again later!',
        'amendmentUpdated'          =>  'Amendment updated successfully.',
        
        //hold module messages( 27-12-2018 )
        'holdNameRequired'     =>  'Error! Hold master name is required!',
        'holdCodeRequired'     =>  'Error! Hold master code is required.',
        'holdStatusRequired'   =>  'Error! Status is required!',
        'holdDeleted'          =>  'Success! Hold master details has been deleted successfully.',
        'holdNotDeleted'       =>  'Error! Hold master details not deleted!Please try again later.',
        'holdUpdated'          =>  'Success! Hold master updated successfully.',
        
        //header note module messages( 27-12-2018 )
        'headerNameRequired'     =>  'Error! Header note name is required!',
        'headerStatusRequired'   =>  'Status is required!',
        'headerNoteDeleted'      =>  'Header Note details has been deleted successfully.!',
        'headerNoteNotDeleted'   =>  'Header Note  details not deleted!Please try again later!',
        'headerNoteUpdated'      =>  'Header Note updated successfully.',
        
        //Stability Orders module messages
        'stbStartDateRequired'              => 'Error! Start Date is required!',
        'stbEndDateRequired'                => 'Error! End Date is required!',
        'stbLabelNameRequired'              => 'Error! Label Name is required!',
        'stbProductIdRequired'              => 'Error! Product Name is required!',
        'stbProductTestIdRequired'          => 'Error! Product Test Name is required!',
        'stbTestStandardIdRequired'         => 'Error! Test Standard Name is required!',
        'stbStabilityTypeIdRequired'        => 'Error! Stability Condition is required!',
        'stbSampleQtyRequired'              => 'Error! Sample Qty is required!',
        'stbConditionTemperatureRequired'   => 'Error! Stability Condition Temperature is required!',
        'stbProductTestStfRequired'         => 'Error! Test Product STF Selection is required!',
        'stbStartEndDateUniqueRequired'     => 'Error! Invalid Start Date and End Date.It should be unique for each Prototype.!',
        'stbEndDateUniqueRequired'          => 'Error! Invalid End Date.It should be unique for each Prototype.!',
        'stbConditionTestParaMismatchError' => 'Error! Please select the Test Paramerter according to Stability Condition.',
        'stbSampleQtyUnavailabilityError'   => 'Error! All Sample Qty already consumed.Please add more Sample Qty.',
        'stbSampleQtyMismatchError'         => 'Error! Sample Qty should not be less that previous Sample Qty.',
        'stbPrototypeMailMsg'               => 'Success! Mail has been send Successfully.',
        
        //country module messages
        'countryCodeRequired'               =>  'Error! Country code is required!',
        'countryNameRequired'               =>  'Error! Country name is required.',
        'countryStatusRequired'             =>  'Country status is required!',
        'countrySaved'                      =>  'Country saved successfully.',
        'countryUpdated'                    =>  'Country updated successfully.',
        'countryNotUpdated'                 =>  'Country not updated! Details are same as previous details.',
        'countryNotSaved'                   =>  'Country not saved!',
        'countryExist'                      =>  'Country already exist!',
        'countryDeleted'                    =>  'Country details has been deleted successfully.!',
        'countryNotDeleted'                 =>  'Country details not deleted!Please try again later!',
        'countryCodeExist'                  =>  'Error! Country code and Country Name already exist!',
        
        //stability type module messages( 25-02-2019 )
        'stabilityTypeRequired'         =>  'Error! Stability Type is required!',
        'stabilityTypeStatusRequired'   =>  'Error! Status is required!',
        'stabilityTypeDeleted'          =>  'Success! Stability Type master details has been deleted successfully.',
        'stabilityTypeNotDeleted'       =>  'Error! Stability Type master details not deleted!Please try again later.',
        'stabilityTypeUpdated'          =>  'Success! Stability Type master updated successfully.',
        
        //Central STP Master
        'cstpNoRequired'                 => 'Error! STP No. is required!',
        'cstpCustomerNameRequired'       => 'Error! Customer name is required!',
        'cstpCustomerCityRequired'       => 'Error! Customer city is required!',
        'cstpSampleNameRequired'         => 'Error! Sample Name is required.',
        'cstpDateRequired'               => 'Error! STP Date is required!',
        'cstpFileErrorRequired'          => 'Error! STP File Name is required.',
        'cstpFileInvalidErrorMsg'        => 'Error! Invalid File selection.Please select the valid file Type!',
        'cstpStatusRequired'             => 'Error! STP Status is required.',
        
        //Central PO Master
        'cpoNoRequired'                 => 'Error! PO No. is required!',
        'cpoCustomerNameRequired'       => 'Error! Customer name is required!',
        'cpoCustomerCityRequired'       => 'Error! Customer city is required!',
        'cpoSampleNameRequired'         => 'Error! Sample Name is required.',
        'cpoDateRequired'               => 'Error! PO Date is required!',
        'cpoAmountRequired'             => 'Error! PO Amount is required!',
        'cpoFileErrorRequired'          => 'Error! PO File Name is required.',
        'cpoFileInvalidErrorMsg'        => 'Error! Invalid File selection.Please select the valid file Type!',
        'cpopStatusRequired'            => 'Error! PO Status is required.',
        
        //Customer Hold Section
        'holdDescErrorRequired'         => 'Error! Hold Description name is required!',
        'holdDateErrorRequired'         => 'Error! Hold Date is required.',
        'holdByErrorRequired'           => 'Error! Hold By is required!',
        
        // Defined test parameter
        'definedTestStandardRequired'     => 'Error! Test standard is required!',

        //Dynamic Fields Section
        'dynamicFieldNameRequired'   => 'Error! Dynamic Field Name is required!',
        'dynamicFieldCodeRequired'   => 'Error! Dynamic Field Code is required!',
        'dynamicFieldStatusRequired' => 'Error! Dynamic Field Status is required!',
        'dynamicFieldSaved'          => 'Dynamic Field saved successfully.',
        'dynamicFieldUpdated'        => 'Dynamic Field has been updated successfully.',
        'dynamicFieldDeleted'        => 'Dynamic Field has been deleted successfully.',
        'dynamicFieldNotSaved'       => 'Dynamic Field not saved!',
        'dynamicFieldNotUpdated'     => 'Dynamic Field not updated!! Dynamic Field are same as previous',
        'dynamicFieldNotDeleted'     => 'Dynamic Field not deleted!Please try again later.',
        'dynamicFieldExist'          => 'Dynamic Field code already exists!',

        //Client Approval Fields
        'clientApprovalFieldsError' => 'Error! All client approval fields are required!',

        //Acount Hold Varaibles
        'creditCollectionTeamMsg' => 'Credit Collection Team hold the Customer.',
        'accountHoldTeamMsg'      => 'Account Hold.',
        'accountHoldUploadedMsg'  => 'Account hold due to above 90 days outstanding amount.',
        'rptHdrTypeRequired'      => 'Report Header type is required!',

        //template module messages
        'orderReportHdrTypeSaved' =>  'Order Report Header saved successfully.',
        'orderReportHdrTypeNotSaved'        =>  'Order Report Header not saved!',
        'orderReprtHdrTypeDeleted'         =>  'Order Report Header has been deleted successfully.',
        'orderReprtHdrTypeNotDeleted'      =>  'Order Report Header  not deleted! Please try again later.',
        'orderReprtHdrTypeUpdated'         =>  'Order Report Header updated successfully.',        
        'orderReprtHdrTypeDetailExist'    =>  'Error! Order Report Header details already exist.',

    ]
];
?>
