<?php

namespace App\Http\Controllers;
use Cookie;
use Illuminate\Http\Request;
use App\Http\Requests;
use Auth;
use App\Company;
use App\ProductCategory;
use App\User;
use Session;
use Validator;
use DB;
use Crypt;
use App\Helpers\Helper;
use Illuminate\Http\Response;
use App\Order;
use App\Models;
use App\Report;
use DNS1D;
use PDF;
use TCPDF;

class DashboardController extends Controller
{
    /**
	* protected Variable.
	*/
	protected $auth;

	/**
	* Create a new controller instance.
	*
	* @return void
	*/
    public function __construct(){
	
	global $models,$order,$report;

	$models = new Models();
	$order = new Order();
	$report = new Report();
	$this->middleware('auth');
	
        $this->middleware(function ($request, $next) {
            $this->auth = Auth::user();
	    parent::__construct($this->auth);
            return $next($request);
        });
    }

    /**
    * Show the application dashboard.
    *
    * @return \Illuminate\Http\Response
    */
    public function index(Request $request){
	
	$user_id            = defined('USERID') ? USERID : '0';
	$division_id   	    = defined('DIVISIONID') ? DIVISIONID : '0';
	$department_ids     = defined('DEPARTMENT_IDS') ? DEPARTMENT_IDS : '0';
	$role_ids           = defined('ROLE_IDS') ? ROLE_IDS : '0';
	$equipment_type_ids = defined('EQUIPMENT_TYPE_IDS') ? EQUIPMENT_TYPE_IDS : '0';

        return view('dashboard',['title' => 'Dashboard','_dashboard' => 'active','user_id' => $user_id,'division_id' => $division_id,'equipment_type_ids' => $equipment_type_ids]);
    }

    public function testing(Request $request){
	
	global $models,$order,$report;
	
	$viewData = array();
	
	//$orderData = DB::table('order_mail_dtl')->select('order_mail_dtl.mail_id',DB::raw('MAX(order_mail_dtl.mail_id) as max_mail_id'),'order_mail_dtl.invoice_id')->where('order_mail_dtl.mail_status','1')->where('order_mail_dtl.mail_content_type','4')->groupBy('order_mail_dtl.invoice_id')->orderBy('order_mail_dtl.mail_id','DESC')->get();
	//if(!empty($orderData)){
	//    foreach($orderData as $key => $values){
	//	if(!empty($values->max_mail_id) && !empty($values->invoice_id)){
	//	    //DB::table('order_mail_dtl111')->where('order_mail_dtl.invoice_id',$values->invoice_id)->where('order_mail_dtl.mail_id',$values->max_mail_id)->update(['order_mail_dtl.mail_active_type' => 1]);
	//	}
	//    }	    
	//}
	//die('Updated');
	
	//$orderData = DB::table('order_mail_dtl')->select('order_mail_dtl.mail_id',DB::raw('MAX(order_mail_dtl.mail_id) as max_mail_id'),'order_mail_dtl.order_id')->where('order_mail_dtl.mail_status','1')->where('order_mail_dtl.mail_content_type','3')->groupBy('order_mail_dtl.order_id')->orderBy('order_mail_dtl.mail_id','DESC')->get();
	//if(!empty($orderData)){
	//    foreach($orderData as $key => $values){
	//	if(!empty($values->max_mail_id)){
	//	    //DB::table('order_mail_dtl11')->where('order_mail_dtl.mail_id',$values->max_mail_id)->update(['order_mail_dtl.mail_active_type' => 1]);
	//	}
	//    }	    
	//}
	//die('Updated');
	
	//$schedulings = DB::table('schedulings')->select('schedulings.scheduling_id','schedulings.order_id','schedulings.scheduled_at',DB::raw('MAX(schedulings.scheduled_at) as scheduled_at_max'))->groupBy('schedulings.order_id')->orderBy('schedulings.scheduled_at','DESC')->get();
	//if(!empty($schedulings)){
	//    foreach($schedulings as $key => $values){
	//	if(!empty($values->order_id) && !empty($values->scheduled_at_max)){
	//	    //DB::table('order_master111')->where('order_master.order_id',$values->order_id)->whereNull('order_master.order_scheduled_date')->update(['order_master.order_scheduled_date' => $values->scheduled_at_max]);
	//	}	
	//    }
	//}
	//echo '<pre>';print_r($schedulings);
	
	//$orderData = DB::table('order_master')->select('order_master.order_id','order_master.booking_date','order_master.order_no','order_master.sample_id')->groupBy('order_master.sample_id')->orderBy('order_master.sample_id','ASC')->get();
	//if(!empty($orderData)){
	//    foreach($orderData as $key => $values){
	//	if(!empty($values->order_id) && !empty($values->booking_date)){
	//	    DB::table('samples')->where('samples.sample_id',$values->sample_id)->where('samples.sample_status','1')->update(['samples.sample_booked_date' => $values->booking_date]);
	//	}
	//    }	    
	//}
	//die('Updated');
	
	//$completedOrderData = DB::table('schedulings')
	//		    ->join('order_master','order_master.order_id','schedulings.order_id')
	//		    ->join('order_report_details','order_report_details.report_id','schedulings.order_id')
	//		    ->select('order_report_details.report_id','order_master.division_id','schedulings.product_category_id','schedulings.order_id','order_master.status','schedulings.equipment_type_id','order_report_details.report_microbiological_sign')
	//		    ->whereNotNull('schedulings.completed_at')
	//		    ->where('schedulings.status',3)
	//		    ->where('order_master.status','>','5')
	//		    ->where('order_master.division_id','=','1')
	//		    ->where('schedulings.equipment_type_id','=','22')
	//		    ->groupBy('schedulings.order_id')
	//		    ->whereNull('order_report_details.report_microbiological_sign')
	//		    ->orderBy('order_report_details.report_id','DESC')
	//		    ->get();
	//
	//foreach($completedOrderData as $key => $values){    
	//    if(!empty($values->product_category_id) && $values->product_category_id != '2'){
	//	$orderData 		     = DB::table('order_master')->select('order_master.order_id','order_master.division_id')->where('order_master.order_id','=',$values->order_id)->first();
	//	$orderReportDetail           = DB::table('order_report_details')->where('order_report_details.report_id','=',$values->order_id)->whereNull('order_report_details.report_microbiological_name')->first();
	//	$hasMicrobiologicalEquipment = DB::table('order_parameters_detail')->where('order_parameters_detail.equipment_type_id','22')->where('order_parameters_detail.order_id','=',$values->order_id)->first();
	//	if(!empty($orderReportDetail) && !empty($hasMicrobiologicalEquipment)){
	//	    $microbiologistData = DB::table('users')->join('role_user', 'users.id', '=', 'role_user.user_id')->where('role_user.role_id','15')->where('users.division_id',$values->division_id)->first();
	//	    if(!empty($microbiologistData->name)){
	//		$reportMicrobiologicalSign = strtolower(preg_replace('/[_]+/','_',preg_replace("/[^a-zA-Z]/", "_", $microbiologistData->name)).'.png');
	//		return DB::table('order_report_details1')->where('order_report_details.report_id',$values->order_id)->update(['order_report_details.report_microbiological_name' => $microbiologistData->name, 'order_report_details.report_microbiological_sign' => $reportMicrobiologicalSign]);    
	//	    }
	//	}    
	//    }
	//}
	//		    
	//echo'<pre>'; print_r($completedOrderData);echo'</pre>';
	//die;
	
	//$completedOrderData = DB::table('schedulings')
	//		    ->join('order_master','order_master.order_id','schedulings.order_id')
	//		    ->select('schedulings.scheduling_id','schedulings.order_id','schedulings.status as scheduling_status','order_master.status as order_status')
	//		    ->whereNotNull('schedulings.completed_at')
	//		    ->where('schedulings.status',3)
	//		    ->where('order_master.status','>','3')
	//		    ->groupBy('schedulings.order_id')
	//		    ->orderBy('schedulings.scheduling_id','DESC')
	//		    ->get();
	//
	//foreach($completedOrderData as $key => $values){
	//    $data = DB::table('schedulings')
	//	    ->select('scheduling_id','order_id','completed_at','status')
	//	    ->where('order_id',$values->order_id)
	//	    ->where('status','3')
	//	    ->orderBy('completed_at','DESC')
	//	    ->first();	    
	//    if(!empty($data->completed_at)){
	//	//DB::table('order_master')->where('order_master.order_id',$data->order_id)->update(['order_master.test_completion_date' => $data->completed_at]);
	//    }
	//}
	
	//$viewData = DB::table('order_process_log')
	//		->select('opl_id','opl_order_id')
	//		->whereIn('order_process_log.opl_order_status_id',array(5,6,7))
	//		->groupBy('order_process_log.opl_order_id')
	//		->orderBy('opl_order_id','DESC')
	//		->limit(10)
	//		->get();
	//
	//foreach($viewData as $key => $values){
	//    
	//    $reviewingdate = DB::table('order_process_log')->select('opl_id','opl_order_id','opl_date','opl_order_status_id')->where('opl_order_id',$values->opl_order_id)->where('order_process_log.opl_order_status_id',5)->orderBy('opl_id','DESC')->first();
	//    $finalizingdate = DB::table('order_process_log')->select('opl_id','opl_order_id','opl_date','opl_order_status_id')->where('opl_order_id',$values->opl_order_id)->where('order_process_log.opl_order_status_id',6)->orderBy('opl_id','DESC')->first();
	//    $approvingdate = DB::table('order_process_log')->select('opl_id','opl_order_id','opl_date','opl_order_status_id')->where('opl_order_id',$values->opl_order_id)->where('order_process_log.opl_order_status_id',7)->orderBy('opl_id','DESC')->first();
	//    
	//    $values->reviewing_date = !empty($reviewingdate->opl_date) ? $reviewingdate->opl_date : NULL;
	//    $values->finalizing_date = !empty($finalizingdate->opl_date) ? $finalizingdate->opl_date : NULL;
	//    $values->approving_date = !empty($approvingdate->opl_date) ? $approvingdate->opl_date : NULL;
	//    
	//    DB::table('order_report_details')->whereNull('order_report_details.reviewing_date')->where('order_report_details.report_id',$values->opl_order_id)->update(['order_report_details.reviewing_date' => $values->reviewing_date]);
	//    DB::table('order_report_details')->whereNull('order_report_details.finalizing_date')->where('order_report_details.report_id',$values->opl_order_id)->update(['order_report_details.finalizing_date' => $values->finalizing_date]);
	//    DB::table('order_report_details')->whereNull('order_report_details.approving_date')->where('order_report_details.report_id',$values->opl_order_id)->update(['order_report_details.approving_date' => $values->approving_date]);
	//}
	
	die('testing blade');
	    
	//echo'<pre>'; print_r($viewData);echo'</pre>';die();
	return view('test',['viewData' => $viewData]);	
    }

    public function parameter_wise_scheduling($postedData){

    	 $responseData = DB::table('division_parameters')
		    ->join('product_master_alias','product_master_alias.c_product_id','order_master.sample_description_id')
		    ->join('samples','samples.sample_id','order_master.sample_id')
		    ->leftJoin('order_report_details','order_report_details.report_id','order_master.order_id')
		    ->leftJoin('order_parameters_detail','order_parameters_detail.order_id','order_master.order_id')
		    ->leftJoin('test_parameter','test_parameter.test_parameter_id','order_parameters_detail.test_parameter_id')
		    ->select('order_master.order_id','product_master_alias.c_product_name as sample_name','order_master.order_no as sample_reg_code','order_master.batch_no','order_master.order_date as sample_reg_date','order_master.order_date as sample_reg_time','order_master.expected_due_date','order_report_details.with_amendment_no as report_status','order_parameters_detail.*','test_parameter.test_parameter_id as testParaId','test_parameter.test_parameter_name')
		   // ->whereBetween(DB::raw("DATE(order_master.order_date)"), array($postedData['date_from'], $postedData['date_to']))
		    ->groupBy('order_master.order_no')
		    ->get();
				   		//echo'<pre>'; print_r($responseData);

		foreach($responseData as $key=>$values){
		    	$respons[$key] = $values->sample_reg_date.'_'.$values->sample_name.'_'.$values->sample_reg_code;

				    $response[$values->order_id]['parameter'] = DB::table('order_parameters_detail')
			    					->leftJoin('test_parameter','test_parameter.test_parameter_id','order_parameters_detail.test_parameter_id')
				    				->where('order_parameters_detail.order_id','=',$values->order_id)
				    				->groupBy('test_parameter.test_parameter_id')
				    				->get();

    				foreach($response as $k=>$val){
    					//$parameter[$k]['test_parameter_name'] = $val->test_parameter_name;
					$respons[$k] = $val;    				}

				}

		$responseResult = !empty($respons) ? json_decode(json_encode($respons),true) : array();
		$error        = !empty($responseData) ? '1' : '0';
		$message      = $error ? '' : config('messages.message.noRecordFound');
	 	$responseResult['tableHead'] = !empty($respons) ? array_keys(end($respons)) : array();
	 	$responseResult['tableBody'] = !empty($respons) ? $respons : array();
		 echo'<pre>'; print_r($responseResult['tableBody']);

	 return array($error,$message,$responseResult);
    }


    public function getParameterCount($order_id,$test_parameter_id)
    {
		 return $count[$order_id][$test_parameter_id] = DB::table('order_parameters_detail')
		   ->where('order_parameters_detail.order_id','=',$order_id)
		   ->count();
		  				   		//echo'<pre>'; print_r($count);

    }

	/**
	* Log the user out of the application.
	*
	* @return \Illuminate\Http\Response
	*/
	public function logout(Request $request)
	{
		Auth::logout();
	    $request->session()->flush();
		return redirect('/');
	}

}
