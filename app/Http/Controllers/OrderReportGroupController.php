<?php
/*****************************
*Created By  : Praveen Singh
*Created On  : 09-Nov-2019
*Modified On : 09-Nov-2019
******************************/

namespace App\Http\Controllers;
use Illuminate\Http\Request;
use App\Http\Requests;
use Auth;
use App\Models;
use App\OrderReportGroup;
use Session;
use Validator;
use Route;
use DB;

class OrderReportGroupController extends Controller
{
    /**
    * protected Variable.
    */
    protected $auth;
    
    /**
    * Create a new controller instance.
    *
    * @return void
    */
    public function __construct(){
	
        global $models,$orderReportGroup;
	
        $models = new Models();
	$orderReportGroup = new OrderReportGroup();

        //MiddleWare CHecking Loin Inn Authentication
        $this->middleware('auth');
	
        $this->middleware(function ($request, $next) {
            $this->auth = Auth::user();
	    parent::__construct($this->auth);
	    //Checking current request is allowed or not
	    $allowedAction = array('index','navigation');
	    $actionData    = explode('@',Route::currentRouteAction());
	    $action        = !empty($actionData[1]) ? trim(strtolower($actionData[1])): '0';			
	    if(defined('NOTALlOWEDTONAVIGATE') && empty(NOTALlOWEDTONAVIGATE) && in_array($action,$allowedAction)){
		return redirect('dashboard')->withErrors('Permission Denied!');
	    }
            return $next($request);
        });	
    }
	
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index(){
	
	global $models,$orderReportGroup;
	
	$user_id            = defined('USERID') ? USERID : '0';
	$division_id   	    = defined('DIVISIONID') ? DIVISIONID : '0';		
	$department_ids     = defined('DEPARTMENT_IDS') ? DEPARTMENT_IDS : '0';
	$role_ids           = defined('ROLE_IDS') ? ROLE_IDS : '0';		
	$equipment_type_ids = defined('EQUIPMENT_TYPE_IDS') ? EQUIPMENT_TYPE_IDS : '0';
		
        return view('master.group_master.index',['title' => 'Group Master','_group_master' => 'active','user_id' => $user_id,'division_id' => $division_id,'equipment_type_ids' => $equipment_type_ids]);
    }
    
     /**
     * Auto Generate code
     *
     * @return \Illuminate\Http\Response
     */
    public function getAutoGeneratedCode(Request $request){
        
        global $models,$orderReportGroup;
        
        $autoGenUniqueCode = $models->generateCode('GRP','order_report_groups','org_group_code','org_group_id');   //prefix,tableName,fieldName,primaryKey						  
        return response()->json(['uniqueCode' => $autoGenUniqueCode]);		
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function createMaster(Request $request){
	
        global $models,$orderReportGroup;
        
        $error    = '0';
        $message  = config('messages.message.error');
        $data     = '';
        $formData = array();
        $tableName = 'order_report_groups';
        
        //Saving record in table
        if(!empty($request->formData) && $request->isMethod('post')){                        
            
	    //Parsing the form Data
            parse_str($request->formData, $formData);
            //echo '<pre>';print_r($formData);die;
                                    
            if(!empty($formData)){                
                
                if(empty($formData['org_group_code'])){
                    $message = config('messages.message.required');
                }else if(empty($formData['org_group_name'])){
                    $message = config('messages.message.required');
                }else if(empty($formData['org_division_id'])){
                    $message = config('messages.message.required');
                }else if(empty($formData['org_product_category_id'])){
                    $message = config('messages.message.required'); 
                }else if(empty($formData['org_group_status'])){
                    $message = config('messages.message.required'); 
                }else if(!empty($formData['org_group_code']) && $orderReportGroup->validateCode($formData['org_group_code'])){  
                    $message = config('messages.message.existError');
                }else if(!empty($formData['org_group_name']) && $orderReportGroup->validateName($formData['org_group_name'])){  
                    $message = config('messages.message.existError');
                } else{
		    try{		    
			//Unsetting the variable from request data
			$formData = $models->unsetFormDataVariables($formData,array('_token'));
			$formData['org_group_created_by'] = USERID;                        
                        if(!empty(DB::table($tableName)->insertGetId($formData))){
                            $error   = '1';
                            $message = config('messages.message.saved');
                        }else{
                            $message = config('messages.message.savedError');    
                        }
		    }catch(\Illuminate\Database\QueryException $ex){
			$message = config('messages.message.existError');
		    }
		}                
            }
        }        
        return response()->json(array('error'=> $error,'message'=> $message,'data' => $data));	
    }

    /**
     * Display the specified resource.
     *
     * @param  \App\Client  $client
     * @return \Illuminate\Http\Response
     */
    public function listMasters(Request $request){
	
	global $models,$orderReportGroup;
	
	$error    = '0';
	$message  = config('messages.message.error');
	$data     = '';
	$formData = array();
	
	$masterDataList = DB::table('order_report_groups')
                    ->join('divisions','divisions.division_id','order_report_groups.org_division_id')
                    ->join('product_categories','product_categories.p_category_id','order_report_groups.org_product_category_id')
                    ->join('users','users.id','order_report_groups.org_group_created_by')
                    ->select('order_report_groups.*','divisions.division_name as org_division_name','product_categories.p_category_name as org_product_category_name','users.name as org_group_created_name')
                    ->orderBy('order_report_groups.org_group_id','DESC')
                    ->get()
                    ->toArray();
                    
        $error    = !empty($masterDataList) ? '1' :  '0';
	$message  = !empty($error) ? '' :config('messages.message.error');

	//to formate created and updated date		   
	$models->formatTimeStampFromArray($masterDataList,DATETIMEFORMAT);
	
	return response()->json(array('error' => $error,'message' => $message,'masterDataList' => $masterDataList));
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \App\Client  $client
     * @return \Illuminate\Http\Response
     */
    public function viewMaster(Request $request,$id){
        
        global $models,$orderReportGroup;
	
	$error    = '0';
	$message  = config('messages.message.error');
	$data     = '';
	$formData = array();
        
        if($id){
            $masterData = DB::table('order_report_groups')
                    ->join('divisions','divisions.division_id','order_report_groups.org_division_id')
                    ->join('product_categories','product_categories.p_category_id','order_report_groups.org_product_category_id')
                    ->join('users','users.id','order_report_groups.org_group_created_by')
                    ->select('order_report_groups.*','divisions.division_name as org_division_name','product_categories.p_category_name as org_product_category_name','users.name as org_group_created_name')
                    ->where('order_report_groups.org_group_id',$id)
                    ->first();
                    
            $error    = !empty($masterData) ? 1 : '0';
            $message  = $error ? '' : $message;
        }	
	return response()->json(array('error' => $error,'message' => $message,'editMasterData' => $masterData));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\Client  $client
     * @return \Illuminate\Http\Response
     */
    public function updateMaster(Request $request){
        
        global $models,$orderReportGroup;
        
        $error    = '0';
        $message  = config('messages.message.error');
        $data     = '';
        $formData = array();
        $tableName = 'order_report_groups';
        
        //Saving record in table
        if(!empty($request->formData) && $request->isMethod('post')){                        
            
	    //Parsing the form Data
            parse_str($request->formData, $formData);
            
            if(empty($formData['org_group_id'])){
                $message = config('messages.message.error');
            }else if(empty($formData['org_group_name'])){
                $message = config('messages.message.required');
            }else if(empty($formData['org_division_id'])){
                $message = config('messages.message.required');
            }else if(empty($formData['org_product_category_id'])){
                $message = config('messages.message.required'); 
            }else if(empty($formData['org_group_status'])){
                $message = config('messages.message.required'); 
            }else if(!empty($formData['org_group_code']) && $orderReportGroup->validateCode($formData['org_group_code'],$type='edit',$d=$formData['org_group_id'])){  
                $message = config('messages.message.existError');
            }else if(!empty($formData['org_group_name']) && $orderReportGroup->validateName($formData['org_group_name'],$type='edit',$d=$formData['org_group_id'])){  
                $message = config('messages.message.existError');
            } else{
                try{
                    //Getting Group ID
                    $org_group_id = !empty($formData['org_group_id']) ? $formData['org_group_id'] : '0';
                    
                    //Unsetting the variable from request data
                    $formData = $models->unsetFormDataVariables($formData,array('_token','org_group_id'));
                
                    if(!empty($org_group_id) && !empty($formData)){
                        if(DB::table($tableName)->where('org_group_id',$org_group_id)->update($formData)){
                            $error   = '1';
                            $message = config('messages.message.updated');    
                        }else{
                            $error   = '1';
                            $message = config('messages.message.savedNoChange');  
                        }
                    }else{
                        $message = config('messages.message.updatedError'); 
                    }
                }catch(\Illuminate\Database\QueryException $ex){
                    $message = config('messages.message.updatedError');
                }
            }
        }        
        return response()->json(array('error' => $error,'message' => $message,'data' => $data));
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Client  $client
     * @return \Illuminate\Http\Response
     */
    public function destroyMaster($id){
        
        global $models,$orderReportGroup;
        
        $error   = '0';
        $message = '';
        $data    = '';
        $tableName = 'order_report_groups';
        
        try{
            if(DB::table($tableName)->where('org_group_id',$id)->delete()){
                $error   = '1';
                $message = config('messages.message.deleted');      
            }else{
                $message = config('messages.message.deletedError');
            }
        }catch(\Illuminate\Database\QueryException $ex){
            $message = config('messages.message.deletedError');
        }             
	return response()->json(['error' => $error,'message' => $message]);
    }
}
